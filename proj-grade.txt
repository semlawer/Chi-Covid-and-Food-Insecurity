Note on the Rubric 
------------------
Although some of the grading criteria may appear subjective to you, I was as objective as possible and assigned almost all the grades using checkpoints on the essential parts that we required for the project. 

The soft criterium I used is mostly concentrated on items #2 (Data Analysis) and #3 (Scope and Complexity). The final grade for those items resulted from an evaluation of all the projects as a whole. I also recognized in those rubrics team's effort and dedication. I considered a project more complex if it required different types of skills and used more diverse content we covered in during the quarter (e.g., if the team downloaded and used two ready-to-use data sets VS if the data was constructed using complex webscraping, data cleaning, record linkage, and everything was stored in a relational SQL database).

Please note that these grades are final! I will not make any grade adjusts unless it is due to an arithmetic error, even if you feel the deduction is too much. Project scores are final. 

As always with assignments, feel free to reach out if you do have any questions about improvement or clarification. Please respond via email if you do have any questions (not on Ed). I will be busy preparing for the next quarter so we may not have a chance to respond right away. 

-------

Project Evaluation Points:

    - Project Requirements (See point breakdown below):
        Points Possible: 75
        Points Obtained: 72

    - Design: & Coding Style: 
        Points Possible: 15
        Points Obtained: 15

    - Program usability:
        Points Possible: 10
        Points Obtained: 8 (See comment below) 


Total Points: 95 / 100


Breakdown of Project Requirements:       

  - Contains README and/or a pdf with textual information describing the project.
        Points Possible: 10
        Points Obtained: 10
	
  - Fulfills requirement #1: Two Data Sources(Web or API and another source)
        Points Possible: 15
        Points Obtained: 15

  - Fulfills requirement #2: Data analysis component
        Points Possible: 15
        Points Obtained: 15

  - Fulfills requirement #3: Project Scope & Complexity
        Points Possible: 20
        Points Obtained: 20


  - Fulfills requirement #4: Visualization or Textual Component
        Points Possible: 15
        Points Obtained: 12 (See comment below) 



Comments: Great work, everyone! I think this was a great project and very beneficial to underrepresented groups dealing with the COVID. 

1. I did have a few difficulties installing an updated version of postgresss and I didn't know that I needed a library called `gdal` that required more work so that does involve a small deduction but overall good job at install in general. 

2. I kept getting the following error: 

psycopg2.errors.UndefinedTable: relation "map_query_foodbanks" does not exist
LINE 1: ..."."lon", "map_query_foodbanks"."geom"::bytea FROM "map_query...
                                                             ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/core/handlers/exception.py", line 47, in inner
    response = get_response(request)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/core/handlers/base.py", line 181, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/CS_covid_food/map_query/views.py", line 128, in fb_datasets
    fbs = serialize('geojson', FoodBanks.objects.all())
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/core/serializers/__init__.py", line 128, in serialize
    s.serialize(queryset, **options)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/core/serializers/base.py", line 90, in serialize
    for count, obj in enumerate(queryset, start=1):
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/models/query.py", line 287, in __iter__
    self._fetch_all()
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/models/query.py", line 1308, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/models/query.py", line 53, in __iter__
    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/models/sql/compiler.py", line 1156, in execute_sql
    cursor.execute(sql, params)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/backends/utils.py", line 98, in execute
    return super().execute(sql, params)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/backends/utils.py", line 66, in execute
    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/backends/utils.py", line 75, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/utils.py", line 90, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "/Users/lamont/uchicago/classes/capp-repos/groups/gabrielapg-marielwb-smlawer-vbalza/env/lib/python3.9/site-packages/django/db/backends/utils.py", line 84, in _execute
    return self.cursor.execute(sql, params)
django.db.utils.ProgrammingError: relation "map_query_foodbanks" does not exist
LINE 1: ..."."lon", "map_query_foodbanks"."geom"::bytea FROM "map_query...
                                                             ^

Specifically: 

relation "map_query_foodbanks" does not exist LINE 1: ..."."lon", "map_query_foodbanks"."geom"::bytea FROM "map_query...
                                                             ^
I wasn't able to interact with the map very much. 
